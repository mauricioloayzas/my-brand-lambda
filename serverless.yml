# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: mauloasan
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: my-brand-lambda
service: my-lambda-service

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  profile: mauloasan  # Specify the AWS profile you want to use

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:us-east-1:996197173188:table/Countries

functions:
  createCountry:
    handler: handler/country/CreateCountry.CreateCountry
    events:
      - http:
          path: countries
          method: post
          cors:
            origins:
              - "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
  GetAllCountries:
    handler: handler/country/GetAll.GetAllCountries
    events:
      - http:
          path: countries
          method: get
          cors:
            origins:
              - "*"
            allowCredentials: true
  getCountry:
    handler: handler/country/Get.getCountry
    events:
      - http:
          path: countries/{id}
          method: get
          cors:
            origins:
              - "*"
            allowCredentials: true

resources:
  Resources:
    CountriesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Countries
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: N
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5